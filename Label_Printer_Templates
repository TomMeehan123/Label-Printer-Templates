classdef Label_Printer_Templates < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                  matlab.ui.Figure
        InputParametersPanel      matlab.ui.container.Panel
        ClearTableButton          matlab.ui.control.Button
        CableLabelEditField       matlab.ui.control.EditField
        CableLabelEditFieldLabel  matlab.ui.control.Label
        LabelSizeDropDown         matlab.ui.control.DropDown
        LabelSizeDropDownLabel    matlab.ui.control.Label
        CableTypeDropDown         matlab.ui.control.DropDown
        CabelLabelDropDownLabel   matlab.ui.control.Label
        UpdateTableButton         matlab.ui.control.Button
        TablesPanel               matlab.ui.container.Panel
        UITable5                  matlab.ui.control.Table
        UITable4                  matlab.ui.control.Table
        UITable3                  matlab.ui.control.Table
        UITable2                  matlab.ui.control.Table
    end

    
    properties (Access = private)
        %Table1 % Description
    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app)
            % Load in the cable type from the CSV file and store it in a
            % variable called Cable_Type
            % Store each cable type into the drop down menu when the user 
            Cable_Type = readtable("CableType.xlsx");
            app.CableTypeDropDown.Items = table2array(Cable_Type);


            % Set the value of each cable type from 1 to N where N is the
            % amount of cables.
            Cable_Type_Size = 1:length(app.CableTypeDropDown.Items);
            app.CableTypeDropDown.ItemsData = Cable_Type_Size;
        end

        % Button pushed function: UpdateTableButton
        function UpdateTableButtonPushed(app, event)

            % Load in the Core Types from the CSV file and store it in a
            % variable called Core_Type
             Core_Type = table2array(readtable("CoreType.csv"));

            
             % Create variables for each table (ie. Bone Tags, 6mm, 1.5mm and 0.5mm)
             Table1 = app.UITable5.Data;
             Table2 = app.UITable2.Data;
             Table3 = app.UITable3.Data;
             Table4 = app.UITable4.Data;

             % If Bone Tags are selected in the dropdown input whatever is
             % stored in the cable label into the Bone Tags table
            if app.LabelSizeDropDown.Value == 1

                % Create an Excel file to store the Bone Tags
                % Delete any existing file to store the new data
                % Insert a header into the file 
                BT_Excel_File = 'Bone Tags.xlsx';
                delete(BT_Excel_File)
                BT_header = {'Bone Tags'};

                % Write the header header into the Excel file
                writecell(BT_header,BT_Excel_File,'Range','A1');

                % Store the value inside the Cable Lable text field inside
                % the Bone Tags table
                % Append every new entry into a new cell
                BoneTags = app.CableLabelEditField.Value;
                Bone_Tag_Rows = {BoneTags};
                app.UITable5.Data = [Table1;Bone_Tag_Rows];

                % Write all values store inside the table into the excel
                % file
                writecell(app.UITable5.Data,BT_Excel_File,'Range','A2');
                
            elseif app.LabelSizeDropDown.Value == 2
                for i = app.CableTypeDropDown.Value

                    % If the 6mm Core has no type
                    if app.CableTypeDropDown.Value == 1
                        % Create an Excel file to store the 6mm Labels
                        % Delete any existing file to store the new data
                        % Insert a header into the file 
                        Six_mm_Excel_File = '6mm Core Labels.xlsx';
                        delete(Six_mm_Excel_File)
                        Six_mm_header = {'6mm Labels'};
        
                        % Write the header header into the Excel file
                        writecell(Six_mm_header,Six_mm_Excel_File,'Range','A1');
        
                        % Store the value inside the Cable Lable text field inside
                        % the 6mm Labels table
                        % Append every new entry into a new cell
                        Six_mm = app.CableLabelEditField.Value;
                        Six_mm_Rows = {Six_mm};
                        app.UITable2.Data = [Table2;Six_mm_Rows ];
        
                        % Write all values store inside the table into the excel
                        % file
                        writecell(app.UITable2.Data,Six_mm_Excel_File,'Range','A2');
                        
                    % If the 6mm core has a type
                    else
                        % Create an Excel file to store the 6mm Labels
                        % Delete any existing file to store the new data
                        % Insert a header into the file 
                        Six_mm_Excel_File = '6mm Core Labels.xlsx';
                        delete(Six_mm_Excel_File)
                        Six_mm_header = {'6mm Labels'};
                        
                        % Write the header header into the Excel file
                        writecell(Six_mm_header,Six_mm_Excel_File,'Range','A1');
    
                        % Store the value inside the Cable Lable text field inside
                        % the 6mm Labels table
                        % Append every new entry into a new cell
                        Six_mm = app.CableLabelEditField.Value;
                        Six_mm_Rows = strcat(Six_mm,rmmissing(Core_Type(:,i)));
    
                        app.UITable2.Data = [Table2;Six_mm_Rows];
    
                        % Write all values store inside the table into the excel
                        % file
                        writecell(app.UITable2.Data,Six_mm_Excel_File,'Range','A2');
                    end
                end
                elseif app.LabelSizeDropDown.Value == 3
                for i = app.CableTypeDropDown.Value

                    % if there is no 1.5mm cable type
                    if app.CableTypeDropDown.Value == 1
                        % Create an Excel file to store the 1.5mm Labels
                        % Delete any existing file to store the new data
                        % Insert a header into the file 
                        One_Point_Five_mm_Excel_File = '1.5mm Core Labels.xlsx';
                        delete(One_Point_Five_mm_Excel_File)
                        One_Point_Five_mm_header = {'1.5mm Labels'};
        
        
                        % Write the header header into the Excel file
                        writecell(One_Point_Five_mm_header,One_Point_Five_mm_Excel_File,'Range','A1');
        
                        % Store the value inside the Cable Lable text field inside
                        % the 1.5mm Labels table
                        % Append every new entry into a new cell
                        One_Point_Five_mm = app.CableLabelEditField.Value;
                        One_Point_Five_mm_Rows = {One_Point_Five_mm};
                        app.UITable3.Data = [Table3;One_Point_Five_mm_Rows];
        
                        % Write all values store inside the table into the excel
                        % file
                        writecell(app.UITable3.Data,One_Point_Five_mm_Excel_File,'Range','A2');

                    % If the 1.5mm core has a type
                    else

                        % Create an Excel file to store the 1.5mm Labels
                        % Delete any existing file to store the new data
                        % Insert a header into the file 
                        One_Point_Five_mm_Excel_File = '1.5mm Core Labels.xlsx';
                        delete(One_Point_Five_mm_Excel_File)
                        One_Point_Five_mm_header = {'1.5mm Labels'};
            
                        % Write the header header into the Excel file
                        writecell(One_Point_Five_mm_header,One_Point_Five_mm_Excel_File,'Range','A1');
    
                        % Store the value inside the Cable Lable text field inside
                        % the 1.5mm Labels table
                        % Append every new entry into a new cell
                        One_Point_Five_mm = app.CableLabelEditField.Value;
                        One_Point_Five_mm_Rows = strcat(One_Point_Five_mm,rmmissing(Core_Type(:,i)));
    
                        app.UITable3.Data = [Table3;One_Point_Five_mm_Rows];
    
                        % Write all values store inside the table into the excel
                        % file
                        writecell(app.UITable3.Data,One_Point_Five_mm_Excel_File,'Range','A2');
                    end
                end
                elseif app.LabelSizeDropDown.Value == 4
                for i = app.CableTypeDropDown.Value

                    if app.CableTypeDropDown.Value == 1
                        % Create an Excel file to store the 0.5mm Labels
                        % Delete any existing file to store the new data
                        % Insert a header into the file 
                        Zero_Point_Five_mm_Excel_File = '0.5mm Core Labels.xlsx';
                        delete(Zero_Point_Five_mm_Excel_File)
                        Zero_Point_Five_mm_header = {'0.5mm Labels'};
        
        
                        % Write the header header into the Excel file
                        writecell(Zero_Point_Five_mm_header,Zero_Point_Five_mm_Excel_File,'Range','A1');
        
                        % Store the value inside the Cable Lable text field inside
                        % the 0.5mm Labels table
                        % Append every new entry into a new cell
                        Zero_Point_Five_mm = app.CableLabelEditField.Value;
                        Zero_Point_Five_mm_Rows = {Zero_Point_Five_mm };
                        app.UITable4.Data = [Table4;Zero_Point_Five_mm_Rows];
        
                        % Write all values store inside the table into the excel
                        % file
                        writecell(app.UITable4.Data,Zero_Point_Five_mm_Excel_File,'Range','A2');
                    
                    % If the 0.5mm core has a type
                    else

                        % Create an Excel file to store the 0.5mm Labels
                        % Delete any existing file to store the new data
                        % Insert a header into the file 
                        Zero_Point_Five_mm_Excel_File = '0.5mm Core Labels.xlsx';
                        delete(Zero_Point_Five_mm_Excel_File)
                        Zero_Point_Five_mm_header = {'0.5mm Labels'};
    
                        % Write the header header into the Excel file
                        writecell(Zero_Point_Five_mm_header,Zero_Point_Five_mm_Excel_File,'Range','A1');
    
                        % Store the value inside the Cable Lable text field inside
                        % the 0.5mm Labels table
                        % Append every new entry into a new cell
                        Zero_Point_Five_mm = app.CableLabelEditField.Value;
                        Zero_Point_Five_mm_Rows = strcat(Zero_Point_Five_mm,rmmissing(Core_Type(:,i)));
    
                        app.UITable4.Data = [Table4;Zero_Point_Five_mm_Rows];
    
                        % Write all values store inside the table into the excel
                        % file
                        writecell(app.UITable4.Data,Zero_Point_Five_mm_Excel_File,'Range','A2');
                    end
                end
            end
        end

        % Button pushed function: ClearTableButton
        function ClearTableButtonPushed(app, event)
            if app.LabelSizeDropDown.Value == 1
                % Delete the last cell inputted into the table
                if isempty(app.UITable5.Data) ~= 0
                    % Do Nothing
                else
                    app.UITable5.Data(length(app.UITable5.Data)) = [];

                    BT_Excel_File = 'Bone Tags.xlsx';
                    delete(BT_Excel_File)
                    BT_header = {'Bone Tags'};
    
                    writecell(BT_header,BT_Excel_File,'Range','A1');
    
                    % Write all values store inside the table into the excel
                    % file
                    writecell(app.UITable5.Data,BT_Excel_File,'Range','A2');
                end
                                

            elseif app.LabelSizeDropDown.Value == 2

                if isempty(app.UITable2.Data) ~= 0

                else
                    app.UITable2.Data(length(app.UITable2.Data)) = [];

                    Six_mm_Excel_File = '6mm Core Labels.xlsx';
                    delete(Six_mm_Excel_File)
                    Six_mm_header = {'6mm Labels'};
    
                    writecell(Six_mm_header,Six_mm_Excel_File,'Range','A1');
    
                    writecell(app.UITable2.Data,Six_mm_Excel_File,'Range','A2');   
                end


            elseif app.LabelSizeDropDown.Value == 3

                if isempty(app.UITable3.Data) ~= 0

                else
                    app.UITable3.Data(length(app.UITable3.Data)) = [];

                    One_Point_Five_mm_Excel_File = '1.5mm Core Labels.xlsx';
                    delete(One_Point_Five_mm_Excel_File)
                    One_Point_Five_mm_header = {'1.5mm Labels'};
    
                    writecell(One_Point_Five_mm_header,One_Point_Five_mm_Excel_File,'Range','A1');
    
                    writecell(app.UITable3.Data,One_Point_Five_mm_Excel_File,'Range','A2');  
                end
                

                elseif app.LabelSizeDropDown.Value == 4

                    if isempty(app.UITable4.Data) ~= 0

                    else
                        app.UITable4.Data(length(app.UITable4.Data)) = [];

                        Zero_Point_Five_mm_Excel_File = '0.5mm Core Labels.xlsx';
                        delete(Zero_Point_Five_mm_Excel_File)
                        Zero_Point_Five_mm_header = {'0.5mm Labels'};
        
                        writecell(Zero_Point_Five_mm_header,Zero_Point_Five_mm_Excel_File,'Range','A1');
        
                        writecell(app.UITable4.Data,Zero_Point_Five_mm_Excel_File,'Range','A2');
  
                    end
                
            end
            
        end

        % Close request function: UIFigure
        function UIFigureCloseRequest(app, event)
            YN = uiconfirm(app.UIFigure,'Do you want to close the app?', 'Close request');
            if strcmpi(YN,'OK')
                delete(app)
            end
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 1066 702];
            app.UIFigure.Name = 'MATLAB App';
            app.UIFigure.CloseRequestFcn = createCallbackFcn(app, @UIFigureCloseRequest, true);

            % Create TablesPanel
            app.TablesPanel = uipanel(app.UIFigure);
            app.TablesPanel.Title = 'Tables';
            app.TablesPanel.Position = [604 1 463 702];

            % Create UITable2
            app.UITable2 = uitable(app.TablesPanel);
            app.UITable2.ColumnName = {'6mm Labels'};
            app.UITable2.RowName = {};
            app.UITable2.ColumnEditable = true;
            app.UITable2.Position = [126 1 113 679];

            % Create UITable3
            app.UITable3 = uitable(app.TablesPanel);
            app.UITable3.ColumnName = {'1.5mm Labels'};
            app.UITable3.RowName = {};
            app.UITable3.ColumnEditable = true;
            app.UITable3.Position = [238 1 113 679];

            % Create UITable4
            app.UITable4 = uitable(app.TablesPanel);
            app.UITable4.ColumnName = {'0.5mm Labels'};
            app.UITable4.RowName = {};
            app.UITable4.ColumnEditable = true;
            app.UITable4.Position = [350 1 113 679];

            % Create UITable5
            app.UITable5 = uitable(app.TablesPanel);
            app.UITable5.ColumnName = {'Bone Tags'};
            app.UITable5.RowName = {};
            app.UITable5.ColumnEditable = true;
            app.UITable5.Position = [15 1 112 679];

            % Create InputParametersPanel
            app.InputParametersPanel = uipanel(app.UIFigure);
            app.InputParametersPanel.Title = 'Input Parameters';
            app.InputParametersPanel.Position = [1 1 604 702];

            % Create UpdateTableButton
            app.UpdateTableButton = uibutton(app.InputParametersPanel, 'push');
            app.UpdateTableButton.ButtonPushedFcn = createCallbackFcn(app, @UpdateTableButtonPushed, true);
            app.UpdateTableButton.Position = [249 400 100 23];
            app.UpdateTableButton.Text = 'Update Table';

            % Create CabelLabelDropDownLabel
            app.CabelLabelDropDownLabel = uilabel(app.InputParametersPanel);
            app.CabelLabelDropDownLabel.HorizontalAlignment = 'right';
            app.CabelLabelDropDownLabel.Position = [168 616 66 22];
            app.CabelLabelDropDownLabel.Text = 'Cable Type';

            % Create CableTypeDropDown
            app.CableTypeDropDown = uidropdown(app.InputParametersPanel);
            app.CableTypeDropDown.Items = {'Select Cable Type'};
            app.CableTypeDropDown.Position = [249 616 132 22];
            app.CableTypeDropDown.Value = 'Select Cable Type';

            % Create LabelSizeDropDownLabel
            app.LabelSizeDropDownLabel = uilabel(app.InputParametersPanel);
            app.LabelSizeDropDownLabel.HorizontalAlignment = 'right';
            app.LabelSizeDropDownLabel.Position = [172 466 62 22];
            app.LabelSizeDropDownLabel.Text = 'Label Size';

            % Create LabelSizeDropDown
            app.LabelSizeDropDown = uidropdown(app.InputParametersPanel);
            app.LabelSizeDropDown.Items = {'Bone Tags', '6mm', '1.5mm', '0.5mm'};
            app.LabelSizeDropDown.ItemsData = [1 2 3 4];
            app.LabelSizeDropDown.Position = [249 466 100 22];
            app.LabelSizeDropDown.Value = 1;

            % Create CableLabelEditFieldLabel
            app.CableLabelEditFieldLabel = uilabel(app.InputParametersPanel);
            app.CableLabelEditFieldLabel.HorizontalAlignment = 'right';
            app.CableLabelEditFieldLabel.Position = [169 538 70 22];
            app.CableLabelEditFieldLabel.Text = 'Cable Label';

            % Create CableLabelEditField
            app.CableLabelEditField = uieditfield(app.InputParametersPanel, 'text');
            app.CableLabelEditField.Position = [254 538 181 22];

            % Create ClearTableButton
            app.ClearTableButton = uibutton(app.InputParametersPanel, 'push');
            app.ClearTableButton.ButtonPushedFcn = createCallbackFcn(app, @ClearTableButtonPushed, true);
            app.ClearTableButton.Position = [249 366 100 23];
            app.ClearTableButton.Text = 'Clear Table';

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = Label_Printer_Templates

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            % Execute the startup function
            runStartupFcn(app, @startupFcn)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end
